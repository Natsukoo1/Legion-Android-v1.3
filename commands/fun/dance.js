
module.exports = {
    name: "dance",
    description: "Démarrer une animation de danse Fortnite.",
    run: async (message, args, command, client) => {
        if (message.author.bot) {
            return;
        }

        // Art ASCII de danse Fortnite sur plusieurs lignes
        const danceArt = [

            `
								⠀⠀⠀⠀			⣀⣤
                ⠀⠀⠀⠀⣿⠿⣶
                ⠀⠀⠀⠀⣿⣿⣀
                ⠀⠀⠀⣶⣶⣿⠿⠛⣶
                ⠤⣀⠛⣿⣿⣿⣿⣿⣿⣭⣿⣤
                ⠒⠀⠀⠀⠉⣿⣿⣿⣿⠀⠀⠉⣀
                ⠀⠤⣤⣤⣀⣿⣿⣿⣿⣀⠀⠀⣿
                ⠀⠀⠛⣿⣿⣿⣿⣿⣿⣿⣭⣶⠉
                ⠀⠀⠀⠤⣿⣿⣿⣿⣿⣿⣿
                ⠀⠀⠀⣭⣿⣿⣿⠀⣿⣿⣿
                ⠀⠀⠀⣉⣿⣿⠿⠀⠿⣿⣿
                ⠀⠀⠀⠀⣿⣿⠀⠀⠀⣿⣿⣤
                ⠀⠀⠀⣀⣿⣿⠀⠀⠀⣿⣿⣿
                ⠀⠀⠀⣿⣿⣿⠀⠀⠀⣿⣿⣿
                ⠀⠀⠀⣿⣿⠛⠀⠀⠀⠉⣿⣿
                ⠀⠀⠀⠉⣿⠀⠀⠀⠀⠀⠛⣿
                ⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⣿⣿
                ⠀⠀⠀⠀⣛⠀⠀⠀⠀⠀⠀⠛⠿⠿⠿
                ⠀⠀⠀⠛⠛
            `,
            `
								⠀⠀			⠀⣀⣶⣀
                ⠀⠀⠀⠒⣛⣭
                ⠀⠀⠀⣀⠿⣿⣶
                ⠀⣤⣿⠤⣭⣿⣿
                ⣤⣿⣿⣿⠛⣿⣿⠀⣀
                ⠀⣀⠤⣿⣿⣶⣤⣒⣛
                ⠉⠀⣀⣿⣿⣿⣿⣭⠉
                ⠀⠀⣭⣿⣿⠿⠿⣿
                ⠀⣶⣿⣿⠛⠀⣿⣿
                ⣤⣿⣿⠉⠤⣿⣿⠿
                ⣿⣿⠛⠀⠿⣿⣿
                ⣿⣿⣤⠀⣿⣿⠿
                ⠀⣿⣿⣶⠀⣿⣿⣶
                ⠀⠀⠛⣿⠀⠿⣿⣿
                ⠀⠀⠀⣉⣿⠀⣿⣿
                ⠀⠶⣶⠿⠛⠀⠉⣿
                ⠀⠀⠀⠀⠀⠀⣀⣿
                ⠀⠀⠀⠀⠀⣶⣿⠿
            `,
              `  ⠀⠀⠀⠀⠀    ⠀						⠀⠀⣤⣿⣿⠶⠀⠀⣀⣀
                ⠀⠀⠀⠀⠀⠀⣀⣀⣤⣤⣶⣿⣿⣿⣿⣿⣿
                ⠀⠀⣀⣶⣤⣤⠿⠶⠿⠿⠿⣿⣿⣿⣉⣿⣿
                ⠿⣉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⣤⣿⣿⣿⣀
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣿⣶⣤
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣿⣿⣿⣿⠿⣛⣿
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠛⣿⣿⣿⣿
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣿⣿⠿⠀⣿⣿⣿⠛
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠀⠀⣿⣿⣿
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⠿⣿⠀⠀⣿⣶
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠛⠀⠀⣿⣿⣶
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⠤
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⣿
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣀
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣿
				`,
            `
                ⠀					⣀
                ⠀⠿⣿⣿⣀
                ⠀⠉⣿⣿⣀
                ⠀⠀⠛⣿⣭⣀⣀⣤
                ⠀⠀⣿⣿⣿⣿⣿⠛⠿⣶⣀
                ⠀⣿⣿⣿⣿⣿⣿⠀⠀⠀⣉⣶
                ⠀⠀⠉⣿⣿⣿⣿⣀⠀⠀⣿⠉
                ⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿
                ⠀⣀⣿⣿⣿⣿⣿⣿⣿⣿⠿
                ⠀⣿⣿⣿⠿⠉⣿⣿⣿⣿
                ⠀⣿⣿⠿⠀⠀⣿⣿⣿⣿
                ⣶⣿⣿⠀⠀⠀⠀⣿⣿⣿
                ⠛⣿⣿⣀⠀⠀⠀⣿⣿⣿⣿⣶⣀
                ⠀⣿⣿⠉⠀⠀⠀⠉⠉⠉⠛⠛⠿⣿⣶
                ⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿
                ⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉
                ⣀⣶⣿⠛
            `,
			`
                ⠀⠀⠀					⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
                ⠀⠀⠀⠀⠀⠀⣿⣿⣿⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣤⣿
                ⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣶⣿⣿⣿⣶⣶⣤⣶⣶⠶⠛⠉⠉
                ⠀⠀⠀⠀⠀⠀⣤⣿⠿⣿⣿⣿⣿⣿⠀⠀⠉⠀⠀⠀⠀⠀⠀
                ⠛⣿⣤⣤⣀⣤⠿⠉⠀⠉⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀
                ⠀⠉⠉⠉⠉⠉⠀⠀⠀⠀⠉⣿⣿⣿⣀⠀⠀⠀⠀⠀⠀⠀⠀
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠛⠀⠀⠀⠀⠀⠀⠀
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣛⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀
                ⠀⠀⠀⠀⠀⠀⠀⣶⣿⣿⠛⠿⣿⣿⣿⣶⣤⠀⠀⠀⠀⠀⠀
                ⠀⠀⠀⠀⠀⠀⠀⣿⠛⠉⠀⠀⠀⠛⠿⣿⣿⣶⣀⠀⠀⠀⠀
                ⠀⠀⠀⠀⠀⠀⣿⣀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⣶⣤⠀⠀
                ⠀⠀⠀⠀⠀⠛⠿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿⣿⠿⠀
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠉⠉⠀`,
            `
                ⠀⠀⠀						⣤⣶⣶
                ⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣀⣀
                ⠀⠀⠀⠀⠀⣀⣶⣿⣿⣿⣿⣿⣿
                ⣤⣶⣀⠿⠶⣿⣿⣿⠿⣿⣿⣿⣿
                ⠉⠿⣿⣿⠿⠛⠉⠀⣿⣿⣿⣿⣿
                ⠀⠀⠉⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣤⣤
                ⠀⠀⠀⠀⠀⠀⠀⣤⣶⣿⣿⣿⣿⣿⣿
                ⠀⠀⠀⠀⠀⣀⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿
                ⠀⠀⠀⠀⣀⣿⣿⣿⠿⠉⠀⠀⣿⣿⣿⣿
                ⠀⠀⠀⠀⣿⣿⠿⠉⠀⠀⠀⠀⠿⣿⣿⠛
                ⠀⠀⠀⠀⠛⣿⣿⣀⠀⠀⠀⠀⠀⣿⣿⣀
                ⠀⠀⠀⠀⠀⣿⣿⣿⠀⠀⠀⠀⠀⠿⣿⣿
                ⠀⠀⠀⠀⠀⠉⣿⣿⠀⠀⠀⠀⠀⠀⠉⣿
                ⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⣀⣿
                ⠀⠀⠀⠀⠀⠀⣀⣿⣿
                ⠀⠀⠀⠀⠤⣿⠿⠿⠿
            `,
			`,
                ⠀⠀⠀				⣀
					⠀⠀⣶⣿⠿⠀⠀⠀⣀⠀⣤⣤
                ⠀⣶⣿⠀⠀⠀⠀⣿⣿⣿⠛⠛⠿⣤⣀
                ⣶⣿⣤⣤⣤⣤⣤⣿⣿⣿⣀⣤⣶⣭⣿⣶⣀
                ⠉⠉⠉⠛⠛⠿⣿⣿⣿⣿⣿⣿⣿⠛⠛⠿⠿
                ⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⠿
                ⠀⠀⠀⠀⠀⠀⠀⠿⣿⣿⣿⣿
                ⠀⠀⠀⠀⠀⠀⠀⠀⣭⣿⣿⣿⣿⣿
                ⠀⠀⠀⠀⠀⠀⠀⣤⣿⣿⣿⣿⣿⣿
                ⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠿
                ⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⠿
                ⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿
                ⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣿
                ⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣿
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⠛⠿⣿⣤
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿⠀⠀⠀⣿⣿⣤
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⣶⣿⠛⠉
                ⠀⠀⠀⠀⠀⠀⠀⠀⣤⣿⣿⠀⠀⠉`,
            `
                ⠀⠀⠀⠀					⣶⣿⣶
                ⠀⠀⠀⣤⣤⣤⣿⣿⣿
                ⠀⠀⣶⣿⣿⣿⣿⣿⣿⣿⣶
                ⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿
                ⠀⠀⣿⣉⣿⣿⣿⣿⣉⠉⣿⣶
                ⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿
                ⠀⣤⣿⣿⣿⣿⣿⣿⣿⠿⠀⣿⣶
                ⣤⣿⠿⣿⣿⣿⣿⣿⠿⠀⠀⣿⣿⣤
                ⠉⠉⠀⣿⣿⣿⣿⣿⠀⠀⠒⠛⠿⠿⠿
                ⠀⠀⠀⠉⣿⣿⣿⠀⠀⠀⠀⠀⠀⠉
                ⠀⠀⠀⣿⣿⣿⣿⣿⣶
                ⠀⠀⠀⠀⣿⠉⠿⣿⣿
                ⠀⠀⠀⠀⣿⣤⠀⠛⣿⣿
                ⠀⠀⠀⠀⣶⣿⠀⠀⠀⣿⣶
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣭⣿⣿
                ⠀⠀⠀⠀⠀⠀⠀⠀⣤⣿⣿⠉
            `,
			`
                ⠀⠀⠀⠀⠀⠀⠀						⣤⣶
                ⠀⠀⠀⠀⠀⣀⣀⠀⣶⣿⣿⠶
                ⣶⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣤⣤
                ⠀⠉⠶⣶⣀⣿⣿⣿⣿⣿⣿⣿⠿⣿⣤⣀
                ⠀⠀⠀⣿⣿⠿⠉⣿⣿⣿⣿⣭⠀⠶⠿⠿
                ⠀⠀⠛⠛⠿⠀⠀⣿⣿⣿⣉⠿⣿⠶
                ⠀⠀⠀⠀⠀⣤⣶⣿⣿⣿⣿⣿
                ⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⠒
                ⠀⠀⠀⠀⣀⣿⣿⣿⣿⣿⣿⣿
                ⠀⠀⠀⠀⠀⣿⣿⣿⠛⣭⣭⠉
                ⠀⠀⠀⠀⠀⣿⣿⣭⣤⣿⠛
                ⠀⠀⠀⠀⠀⠛⠿⣿⣿⣿⣭
                ⠀⠀⠀⠀⠀⠀⠀⣿⣿⠉⠛⠿⣶⣤
                ⠀⠀⠀⠀⠀⠀⣀⣿⠀⠀⣶⣶⠿⠿⠿
                ⠀⠀⠀⠀⠀⠀⣿⠛
                ⠀⠀⠀⠀⠀⠀⣭⣶
            `,
			`
                ⠀⠀⠀⠀⠀⠀⠀⠀					⣤⣤
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿
                ⠀⠀⣶⠀⠀⣀⣤⣶⣤⣉⣿⣿⣤⣀
                ⠤⣤⣿⣤⣿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣀
                ⠀⠛⠿⠀⠀⠀⠀⠉⣿⣿⣿⣿⣿⠉⠛⠿⣿⣤
                ⠀⠀⠀⠀⠀⠀⠀⠀⠿⣿⣿⣿⠛⠀⠀⠀⣶⠿
                ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿⣿⣿⣿⣤⠀⣿⠿
                ⠀⠀⠀⠀⠀⠀⠀⣶⣿⣿⣿⣿⣿⣿⣿⣿
                ⠀⠀⠀⠀⠀⠀⠀⠿⣿⣿⣿⣿⣿⠿⠉⠉
                ⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣿⠿
                ⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠉
                ⠀⠀⠀⠀⠀⠀⠀⠀⣛⣿⣭⣶⣀
                ⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠉⠛⣿
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⣿⣿
                ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣉⠀⣶⠿
                ⠀⠀⠀⠀⠀⠀⠀⠀⣶⣿⠿
                ⠀⠀⠀⠀⠀⠀⠀⠛⠿⠛
            `
         ];

        const sendDanceArt = (index) => {
            if (index >= danceArt.length) {
                return;
            }

            // Récupère le message précédent s'il existe
            const previousMessage = message.channel.lastMessage;

            // Envoie ou modifie le message d'art ASCII
            if (!previousMessage) {
                // Si le message précédent n'existe pas, envoyez un nouveau message
                message.channel.send(danceArt[index])
                    .then((sentMessage) => {
                        // Appelle la fonction récursivement pour le prochain message
                        setTimeout(() => {
                            sendDanceArt(index + 1);
                        }, 1000);
                    });
            } else {
                // Si le message précédent existe, modifie son contenu
                previousMessage.edit(danceArt[index])
                    .then(() => {
                        // Appelle la fonction récursivement pour le prochain message
                        setTimeout(() => {
                            sendDanceArt(index + 1);
                        }, 1000);
                    });
            }
        };

        // Démarre l'animation en appelant la fonction pour la première fois
        sendDanceArt(0);
    }
};